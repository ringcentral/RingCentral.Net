namespace RingCentral
{
    public class TokenInfo
    {
        /// <summary>
        ///     OAuth access token to pass to subsequent API requests
        ///     Required
        ///     Example: U1BCMDFUMDRKV1MwMXxzLFSvXdw5PHMsVLEn_MrtcyxUsw
        /// </summary>
        public string access_token { get; set; }

        /// <summary>
        ///     Access token TTL (time-to-live) in seconds
        ///     Required
        ///     Format: int32
        ///     Example: 7199
        /// </summary>
        public long? expires_in { get; set; }

        /// <summary>
        ///     OAuth refresh token (if issued)
        ///     Example: U1BCMDFUMDRKV1MwMXxzLFL4ec6A0XMsUv9wLriecyxS_w
        /// </summary>
        public string refresh_token { get; set; }

        /// <summary>
        ///     Refresh token TTL (time-to-live) in seconds
        ///     Format: int32
        ///     Example: 604799
        /// </summary>
        public long? refresh_token_expires_in { get; set; }

        /// <summary>
        ///     The list of space separated application permissions (OAuth scopes)
        ///     Required
        ///     Example: AccountInfo CallLog ExtensionInfo Messages SMS
        /// </summary>
        public string scope { get; set; }

        /// <summary>
        ///     Type of the token. The only supported value is `bearer`. This value should be used when specifying access token in
        ///     `Authorization` header of subsequent API requests
        ///     Required
        ///     Example: bearer
        ///     Enum: bearer
        /// </summary>
        public string token_type { get; set; }

        /// <summary>
        ///     Token owner's identifier. Contains RingCentral user (extension) ID
        ///     Example: 256440016
        /// </summary>
        public string owner_id { get; set; }

        /// <summary>
        ///     Client application instance identifier that matches the value provided by the client,
        ///     or generated by the server if a client has not provided this value
        ///     Example: 8zXq6oaLT7WvwWITlGiA1A
        /// </summary>
        public string endpoint_id { get; set; }

        /// <summary>
        ///     OpenID Connect ID token (if OpenID Connect flow was activated during authorization)
        /// </summary>
        public string id_token { get; set; }

        /// <summary>
        ///     Remaining time in seconds until session expiration due to absolute timeout.
        ///     Returned only if absolute session timeout is enforced
        ///     Format: int32
        /// </summary>
        public long? session_expires_in { get; set; }

        /// <summary>
        ///     Absolute value of session expiration time in ISO date formatted string.
        ///     Returned only if absolute session timeout is enforced
        ///     Format: date-time
        ///     Example: 2023-04-01T12:00:01Z
        /// </summary>
        public string session_expiration_time { get; set; }

        /// <summary>
        ///     OAuth session ID
        ///     Required
        /// </summary>
        public string session_id { get; set; }

        /// <summary>
        ///     Nominal value of session idle timeout in seconds.
        ///     Returned only if idle session timeout is enforced
        ///     Format: int32
        /// </summary>
        public long? session_idle_timeout { get; set; }
    }
}